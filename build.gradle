plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.Eragoo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation "io.springfox:springfox-boot-starter:$springfoxSwaggerVersion"
	implementation "org.mapstruct:mapstruct:$mapstructVersion"
	implementation 'org.apache.commons:commons-lang3'
	implementation 'io.jsonwebtoken:jjwt-api:0.10.7'
	implementation'org.springframework.boot:spring-boot-starter-validation'

	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.10.7'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.10.7'
	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
	annotationProcessor "org.hibernate:hibernate-jpamodelgen"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

compileJava {
	options.compilerArgs = [
			'-Amapstruct.defaultComponentModel=spring'
	]
}